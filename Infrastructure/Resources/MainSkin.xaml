<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:Infrastructure.Resources.Converters">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Infrastructure;component/Resources/Brushes.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Infrastructure;component/Resources/Images.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <converters:BoolToVisibilityConverter x:Key="BooleanToVisibilityInverseConverter" Inverse="True" />

    <converters:BoolToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

    <!-- Конвертеры -->

    <BorderGapMaskConverter x:Key="BorderGapMaskConverter" />

    <!-- Текст -->

    <Style x:Key="WrappingStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>

    <!-- Стили для текстблоков в левой колонке информации по осям -->

    <Style x:Key="lbTextBlockStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="30" />
        <Setter Property="Foreground" Value="{StaticResource MainTextColor}" />
    </Style>

    <Style x:Key="lbTextBlockStyle2" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="25" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="Foreground" Value="{StaticResource MainTextColor}" />
    </Style>

    <!-- Шаблон для ItemsControl -->

    <DataTemplate x:Key="itMotorsInfoTemplate">
        <Grid ClipToBounds="True" VerticalAlignment="Center" Visibility="{Binding Converter={StaticResource BooleanToVisibilityConverter},Path=Activated}">
            <!--<Grid.Height>
                <MultiBinding Converter="{converters:SizeConverter}">
                    <Binding RelativeSource="{RelativeSource AncestorType=UserControl}" Path="ActualHeight" Mode="OneWay" />
                    <Binding ElementName="dpCoordType" Path="ActualHeight"/>
                    <Binding RelativeSource="{RelativeSource AncestorType=ItemsControl}" Path="DataContext.ActiveMotorCount" />
                </MultiBinding>
            </Grid.Height>-->
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <TextBlock VerticalAlignment="Center" Text="{Binding Letter}" Style="{DynamicResource lbTextBlockStyle2}" FontSize="60" Margin="10,0,30,0"/>
            <Viewbox Grid.Column="1" Grid.ColumnSpan="2" StretchDirection="DownOnly">
                <TextBlock Style="{StaticResource lbTextBlockStyle2}" FontSize="50" Text="{Binding Position, StringFormat=F3, FallbackValue='12345.678'}" VerticalAlignment="Center" TextAlignment="Right"/>
            </Viewbox>
            <ProgressBar Grid.Row="1" VerticalAlignment="Center" Height="30" Maximum="100" Style="{DynamicResource pbMotorLoadStyle1}" Minimum="0" Value="{Binding CurrentPercentage}"/>
            <TextBlock Grid.Row="1" VerticalAlignment="Center" Grid.Column="1" Text="FE:" FontSize="35" Foreground="{DynamicResource MainTextColor}" Margin="3"/>
            <TextBlock Grid.Row="1" Grid.Column="2" VerticalAlignment="Center" Text="{Binding FollowingError, StringFormat=F3, FallbackValue='error'}" FontSize="35" Foreground="{DynamicResource MainTextColor}" Margin="3"/>
        </Grid>
    </DataTemplate>

    <!-- Progress bar (нагрузка на моторы) -->

    <Style x:Key="pbMotorLoadStyle1" TargetType="ProgressBar">
        <Setter Property="MinHeight" Value="10" />
        <Setter Property="MinWidth" Value="70" />
        <Setter Property="Margin" Value="3" />
        <Setter Property="Foreground" Value="{Binding CurrentPercentage, Converter={converters:PercentageToColor}}" />
    </Style>

    <!-- Базовый темплей для кнопок -->

    <ControlTemplate x:Key="ButtonBaseControlTemplate1" TargetType="{x:Type ButtonBase}">
        <ControlTemplate.Resources>
            <Storyboard x:Key="Storyboard1">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                    <EasingDoubleKeyFrame Value="1.05" KeyTime="0" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                    <EasingDoubleKeyFrame Value="0" KeyTime="0" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                    <EasingDoubleKeyFrame Value="1.05" KeyTime="0" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                    <EasingDoubleKeyFrame Value="0" KeyTime="0" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>
        <Border
            x:Name="border"
            Margin="5"
            BorderBrush="#FF3152A0"
            BorderThickness="1.5"
            CornerRadius="5"
            RenderTransformOrigin="0.5,0.5"
            SnapsToDevicePixels="True">
            <Border.RenderTransform>
                <TransformGroup>
                    <ScaleTransform />
                    <SkewTransform />
                    <RotateTransform />
                    <TranslateTransform />
                </TransformGroup>
            </Border.RenderTransform>
            <Border.Background>
                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Offset="0" Color="#FFF0F6FE" />
                    <GradientStop Offset="1" Color="White" />
                    <GradientStop Offset="0.5" Color="#FFAFC8E0" />
                </LinearGradientBrush>
            </Border.Background>
            <Viewbox>
                <ContentPresenter
                    x:Name="contentPresenter"
                    Margin="{TemplateBinding Padding}"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    Content="{TemplateBinding Content}"
                    ContentStringFormat="{TemplateBinding ContentStringFormat}"
                    ContentTemplate="{TemplateBinding ContentTemplate}"
                    Focusable="False"
                    RecognizesAccessKey="True"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                    TextBlock.FontSize="17"
                    TextBlock.FontWeight="Bold"
                    TextBlock.Foreground="#30509F">
                    <ContentPresenter.Resources>
                        <Style BasedOn="{StaticResource WrappingStyle}" TargetType="{x:Type TextBlock}" />
                    </ContentPresenter.Resources>
                </ContentPresenter>
            </Viewbox>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Button.IsDefaulted" Value="True">
                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="Storyboard1_BeginStoryboard" />
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard x:Name="Storyboard1_BeginStoryboard" Storyboard="{StaticResource Storyboard1}" />
                </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="border" Property="Opacity" Value="0.7" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter TargetName="border" Property="Background" Value="#FFBCDDEE" />
                <Setter TargetName="border" Property="BorderBrush" Value="#FF245A83" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="border" Property="Background" Value="#FFF4F4F4" />
                <Setter TargetName="border" Property="BorderBrush" Value="#FFADB2B5" />
                <Setter Property="Foreground" Value="#FF838383" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- Базовый стиль для кнопок -->

    <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD" />

    <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070" />

    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD" />

    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1" />

    <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6" />

    <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B" />

    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4" />

    <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5" />

    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383" />

    <SolidColorBrush x:Key="TabItem.Selected.Background" Color="#FFFFFF" />

    <SolidColorBrush x:Key="TabItem.Selected.Border" Color="#ACACAC" />

    <Style x:Key="ButtonStyle1" TargetType="{x:Type ButtonBase}">
        <!--<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />-->
        <Setter Property="Background" Value="{StaticResource Button.Static.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="border"
                        Margin="4"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="4"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="{TemplateBinding Margin}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Button.MouseOver.Background}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.MouseOver.Border}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Pressed.Background}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Pressed.Border}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Disabled.Background}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Disabled.Border}" />
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource Button.Disabled.Foreground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Темплейт для радиобатонов -->

    <ControlTemplate x:Key="RadioButtonBaseControlTemplate1" TargetType="{x:Type RadioButton}">
        <ControlTemplate.Resources>
            <Storyboard x:Key="Storyboard1">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                    <EasingDoubleKeyFrame Value="1.05" KeyTime="0" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                    <EasingDoubleKeyFrame Value="0" KeyTime="0" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                    <EasingDoubleKeyFrame Value="1.05" KeyTime="0" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                    <EasingDoubleKeyFrame Value="0" KeyTime="0" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>
        <Border
            x:Name="border"
            Margin="5"
            BorderBrush="#FF3152A0"
            BorderThickness="1.5"
            CornerRadius="5"
            RenderTransformOrigin="0.5,0.5"
            SnapsToDevicePixels="True">
            <Border.RenderTransform>
                <TransformGroup>
                    <ScaleTransform />
                    <SkewTransform />
                    <RotateTransform />
                    <TranslateTransform />
                </TransformGroup>
            </Border.RenderTransform>
            <Border.Background>
                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Offset="0" Color="#FFF0F6FE" />
                    <GradientStop Offset="1" Color="White" />
                    <GradientStop Offset="0.5" Color="#FFAFC8E0" />
                </LinearGradientBrush>
            </Border.Background>
            <Viewbox>
                <ContentPresenter
                    x:Name="contentPresenter"
                    Margin="{TemplateBinding Padding}"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    Content="{TemplateBinding Content}"
                    ContentStringFormat="{TemplateBinding ContentStringFormat}"
                    ContentTemplate="{TemplateBinding ContentTemplate}"
                    Focusable="False"
                    RecognizesAccessKey="True"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                    TextBlock.FontSize="17"
                    TextBlock.FontWeight="Bold"
                    TextBlock.Foreground="#30509F" />
            </Viewbox>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Button.IsDefaulted" Value="True">
                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="Storyboard1_BeginStoryboard" />
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard x:Name="Storyboard1_BeginStoryboard" Storyboard="{StaticResource Storyboard1}" />
                </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="border" Property="Opacity" Value="0.7" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter TargetName="border" Property="Background" Value="#FFBCDDEE" />
                <Setter TargetName="border" Property="BorderBrush" Value="#FF245A83" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="border" Property="Background" Value="#FFF4F4F4" />
                <Setter TargetName="border" Property="BorderBrush" Value="#FFADB2B5" />
                <Setter Property="Foreground" Value="#FF838383" />
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="border" Property="Background" Value="{StaticResource RadioButton.ActivatedBackgroundGradient}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="false" />
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- Стиль для радиобатонов -->

    <Style x:Key="MachineStateRadioButtonStyle" TargetType="RadioButton">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="BorderBrush" Value="{StaticResource Button.BorderBrush}" />
    </Style>

    <!-- Групбоксы в верхней части -->

    <Style x:Key="GroupBoxTopStyle1" TargetType="{x:Type GroupBox}">
        <Setter Property="BorderBrush" Value="#D5DFE5" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="6" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="6" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="6" />
                        </Grid.RowDefinitions>
                        <Border
                            Grid.Row="1"
                            Grid.RowSpan="3"
                            Grid.Column="0"
                            Grid.ColumnSpan="4"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4" />
                        <Border
                            Grid.Row="1"
                            Grid.RowSpan="3"
                            Grid.ColumnSpan="4"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="6">
                            <Border.OpacityMask>
                                <MultiBinding Converter="{StaticResource BorderGapMaskConverter}" ConverterParameter="7">
                                    <Binding ElementName="Header" Path="ActualWidth" />
                                    <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}" />
                                    <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}" />
                                </MultiBinding>
                            </Border.OpacityMask>
                            <Border
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="3">
                                <Border
                                    BorderBrush="#FF1E62B4"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="2" />
                            </Border>
                        </Border>
                        <Border
                            x:Name="Header"
                            Grid.Row="0"
                            Grid.RowSpan="2"
                            Grid.Column="1"
                            Padding="3,1,3,0">
                            <ContentPresenter
                                ContentSource="Header"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                TextBlock.FontSize="17"
                                TextBlock.FontWeight="Bold" />
                        </Border>
                        <ContentPresenter
                            Grid.Row="2"
                            Grid.Column="1"
                            Grid.ColumnSpan="2"
                            Margin="{TemplateBinding Padding}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            TextBlock.Foreground="#1E62B4" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Стиль кнопок выбора координатного отображения -->

    <Style x:Key="RadioButtonCoordinateStyle" TargetType="RadioButton">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Width" Value="170" />
    </Style>

    <!-- Базовый темплейт кнопок выбора координатного отображения -->

    <ControlTemplate x:Key="RadioButtonCoordinateTemplate" TargetType="{x:Type RadioButton}">
        <ControlTemplate.Resources>
            <Storyboard x:Key="Storyboard1">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                    <EasingDoubleKeyFrame Value="1.05" KeyTime="0" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                    <EasingDoubleKeyFrame Value="0" KeyTime="0" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                    <EasingDoubleKeyFrame Value="1.05" KeyTime="0" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                    <EasingDoubleKeyFrame Value="0" KeyTime="0" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>
        <Border
            x:Name="border"
            Margin="{TemplateBinding Margin}"
            BorderBrush="#FF3152A0"
            BorderThickness="1.5"
            CornerRadius="5"
            RenderTransformOrigin="0.5,0.5"
            SnapsToDevicePixels="True">
            <Border.RenderTransform>
                <TransformGroup>
                    <ScaleTransform />
                    <SkewTransform />
                    <RotateTransform />
                    <TranslateTransform />
                </TransformGroup>
            </Border.RenderTransform>
            <Border.Background>
                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Offset="0" Color="#FFF0F6FE" />
                    <GradientStop Offset="1" Color="White" />
                    <GradientStop Offset="0.5" Color="#FFAFC8E0" />
                </LinearGradientBrush>
            </Border.Background>
            <ContentPresenter
                x:Name="contentPresenter"
                Margin="5"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                Content="{TemplateBinding Content}"
                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                ContentTemplate="{TemplateBinding ContentTemplate}"
                Focusable="False"
                RecognizesAccessKey="True"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                TextBlock.FontSize="17"
                TextBlock.FontWeight="Bold"
                TextBlock.Foreground="#30509F" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Button.IsDefaulted" Value="True">
                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="Storyboard1_BeginStoryboard" />
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard x:Name="Storyboard1_BeginStoryboard" Storyboard="{StaticResource Storyboard1}" />
                </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="border" Property="Opacity" Value="0.7" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter TargetName="border" Property="Background" Value="#FFBCDDEE" />
                <Setter TargetName="border" Property="BorderBrush" Value="#FF245A83" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="border" Property="Background" Value="#FFF4F4F4" />
                <Setter TargetName="border" Property="BorderBrush" Value="#FFADB2B5" />
                <Setter Property="Foreground" Value="#FF838383" />
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="border" Property="Background" Value="{StaticResource RadioButtonCoordinate.ActivatedBackgroundGradient}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- Главный таб-контрол -->

    <LinearGradientBrush x:Key="TabItem.Static.Background" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0.0" Color="#F0F0F0" />
        <GradientStop Offset="1.0" Color="#E5E5E5" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="TabItem.Static.Border" Color="#ACACAC" />

    <LinearGradientBrush x:Key="TabItem.MouseOver.Background" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0.0" Color="#ECF4FC" />
        <GradientStop Offset="1.0" Color="#DCECFC" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="TabItem.MouseOver.Border" Color="#7EB4EA" />

    <SolidColorBrush x:Key="TabItem.Disabled.Background" Color="#F0F0F0" />

    <SolidColorBrush x:Key="TabItem.Disabled.Border" Color="#D9D9D9" />

    <Style x:Key="TabItemStyle1" TargetType="{x:Type TabItem}">
        <Setter Property="Header" Value="{Binding DataContext.Title}" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="6,2,6,2" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                        <Border
                            x:Name="mainBorder"
                            MinWidth="75"
                            MinHeight="40"
                            Margin="1"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1,1,1,0"
                            CornerRadius="5,5,0,0">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <GradientStop Offset="0" Color="#FFF0F0F0" />
                                    <GradientStop Offset="1" Color="#FFE5E5E5" />
                                    <GradientStop Offset="0.5" Color="#FF92B3DC" />
                                </LinearGradientBrush>
                            </Border.Background>
                            <Border
                                x:Name="innerBorder"
                                Margin="-1"
                                BorderBrush="{StaticResource TabItem.Selected.Border}"
                                BorderThickness="1,1,1,0"
                                CornerRadius="5,5,0,0"
                                Opacity="0">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                        <GradientStop Offset="0" Color="#FFE9F0F7" />
                                        <GradientStop Offset="1" Color="#FFF2F3F5" />
                                        <GradientStop Offset="0.5" Color="#FFDCE7F4" />
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                        </Border>
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                            VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                            ContentSource="Header"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            TextBlock.FontWeight="Bold" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Value="true" Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" />
                                <Condition Value="Left" Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="mainBorder" Property="Background" Value="{StaticResource TabItem.MouseOver.Background}" />
                            <Setter TargetName="mainBorder" Property="BorderBrush" Value="{StaticResource TabItem.MouseOver.Border}" />
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,1,0,1" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,0,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Value="true" Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" />
                                <Condition Value="Bottom" Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="mainBorder" Property="Background" Value="{StaticResource TabItem.MouseOver.Background}" />
                            <Setter TargetName="mainBorder" Property="BorderBrush" Value="{StaticResource TabItem.MouseOver.Border}" />
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,0,1,1" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,0,1,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Value="true" Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" />
                                <Condition Value="Right" Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="mainBorder" Property="Background" Value="{StaticResource TabItem.MouseOver.Background}" />
                            <Setter TargetName="mainBorder" Property="BorderBrush" Value="{StaticResource TabItem.MouseOver.Border}" />
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="0,1,1,1" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="0,1,1,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Value="true" Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" />
                                <Condition Value="Top" Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="mainBorder" Property="Background" Value="{StaticResource TabItem.MouseOver.Background}" />
                            <Setter TargetName="mainBorder" Property="BorderBrush" Value="{StaticResource TabItem.MouseOver.Border}" />
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,1,1,0" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,1,0" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Value="false" Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" />
                                <Condition Value="Left" Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="contentPresenter" Property="Opacity" Value="0.56" />
                            <Setter TargetName="mainBorder" Property="Background" Value="{StaticResource TabItem.Disabled.Background}" />
                            <Setter TargetName="mainBorder" Property="BorderBrush" Value="{StaticResource TabItem.Disabled.Border}" />
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,1,0,1" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,0,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Value="false" Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" />
                                <Condition Value="Bottom" Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="contentPresenter" Property="Opacity" Value="0.56" />
                            <Setter TargetName="mainBorder" Property="Background" Value="{StaticResource TabItem.Disabled.Background}" />
                            <Setter TargetName="mainBorder" Property="BorderBrush" Value="{StaticResource TabItem.Disabled.Border}" />
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,0,1,1" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,0,1,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Value="false" Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" />
                                <Condition Value="Right" Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="contentPresenter" Property="Opacity" Value="0.56" />
                            <Setter TargetName="mainBorder" Property="Background" Value="{StaticResource TabItem.Disabled.Background}" />
                            <Setter TargetName="mainBorder" Property="BorderBrush" Value="{StaticResource TabItem.Disabled.Border}" />
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="0,1,1,1" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="0,1,1,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Value="false" Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" />
                                <Condition Value="Top" Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="contentPresenter" Property="Opacity" Value="0.56" />
                            <Setter TargetName="mainBorder" Property="Background" Value="{StaticResource TabItem.Disabled.Background}" />
                            <Setter TargetName="mainBorder" Property="BorderBrush" Value="{StaticResource TabItem.Disabled.Border}" />
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,1,1,0" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,1,0" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Value="false" Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" />
                                <Condition Value="Left" Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,1,0,1" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,0,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Value="true" Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" />
                                <Condition Value="Left" Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Panel.ZIndex" Value="1" />
                            <Setter Property="Margin" Value="-2,-2,0,-2" />
                            <Setter TargetName="innerBorder" Property="Opacity" Value="1" />
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,1,0,1" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,0,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Value="false" Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" />
                                <Condition Value="Bottom" Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,0,1,1" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,0,1,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Value="true" Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" />
                                <Condition Value="Bottom" Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Panel.ZIndex" Value="1" />
                            <Setter Property="Margin" Value="-2,0,-2,-2" />
                            <Setter TargetName="innerBorder" Property="Opacity" Value="1" />
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,0,1,1" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,0,1,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Value="false" Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" />
                                <Condition Value="Right" Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="0,1,1,1" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="0,1,1,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Value="true" Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" />
                                <Condition Value="Right" Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Panel.ZIndex" Value="1" />
                            <Setter Property="Margin" Value="0,-2,-2,-2" />
                            <Setter TargetName="innerBorder" Property="Opacity" Value="1" />
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="0,1,1,1" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="0,1,1,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Value="false" Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" />
                                <Condition Value="Top" Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,1,1,0" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,1,0" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Value="true" Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" />
                                <Condition Value="Top" Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Panel.ZIndex" Value="1" />
                            <Setter Property="Margin" Value="-2,-2,-2,0" />
                            <Setter TargetName="innerBorder" Property="Opacity" Value="1" />
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,1,1,0" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,1,0" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- Дополнительынй стиль таб-контролов -->

    <Style x:Key="SimpleTabItemStyle1" TargetType="{x:Type TabItem}">
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="6,2,6,2" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                        <Border
                            x:Name="mainBorder"
                            MinWidth="75"
                            MinHeight="40"
                            Margin="1"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1,1,1,0"
                            CornerRadius="5,5,0,0">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <GradientStop Offset="0" Color="#FFF0F0F0" />
                                    <GradientStop Offset="1" Color="#FFE5E5E5" />
                                    <GradientStop Offset="0.5" Color="#FF92B3DC" />
                                </LinearGradientBrush>
                            </Border.Background>
                            <Border
                                x:Name="innerBorder"
                                Margin="-1"
                                BorderBrush="{StaticResource TabItem.Selected.Border}"
                                BorderThickness="1,1,1,0"
                                CornerRadius="5,5,0,0"
                                Opacity="0">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                        <GradientStop Offset="0" Color="#FFE9F0F7" />
                                        <GradientStop Offset="1" Color="#FFF2F3F5" />
                                        <GradientStop Offset="0.5" Color="#FFDCE7F4" />
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                        </Border>
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                            VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                            ContentSource="Header"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            TextBlock.FontWeight="Bold" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Value="true" Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" />
                                <Condition Value="Left" Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="mainBorder" Property="Background" Value="{StaticResource TabItem.MouseOver.Background}" />
                            <Setter TargetName="mainBorder" Property="BorderBrush" Value="{StaticResource TabItem.MouseOver.Border}" />
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,1,0,1" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,0,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Value="true" Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" />
                                <Condition Value="Bottom" Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="mainBorder" Property="Background" Value="{StaticResource TabItem.MouseOver.Background}" />
                            <Setter TargetName="mainBorder" Property="BorderBrush" Value="{StaticResource TabItem.MouseOver.Border}" />
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,0,1,1" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,0,1,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Value="true" Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" />
                                <Condition Value="Right" Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="mainBorder" Property="Background" Value="{StaticResource TabItem.MouseOver.Background}" />
                            <Setter TargetName="mainBorder" Property="BorderBrush" Value="{StaticResource TabItem.MouseOver.Border}" />
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="0,1,1,1" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="0,1,1,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Value="true" Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" />
                                <Condition Value="Top" Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="mainBorder" Property="Background" Value="{StaticResource TabItem.MouseOver.Background}" />
                            <Setter TargetName="mainBorder" Property="BorderBrush" Value="{StaticResource TabItem.MouseOver.Border}" />
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,1,1,0" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,1,0" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Value="false" Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" />
                                <Condition Value="Left" Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="contentPresenter" Property="Opacity" Value="0.56" />
                            <Setter TargetName="mainBorder" Property="Background" Value="{StaticResource TabItem.Disabled.Background}" />
                            <Setter TargetName="mainBorder" Property="BorderBrush" Value="{StaticResource TabItem.Disabled.Border}" />
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,1,0,1" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,0,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Value="false" Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" />
                                <Condition Value="Bottom" Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="contentPresenter" Property="Opacity" Value="0.56" />
                            <Setter TargetName="mainBorder" Property="Background" Value="{StaticResource TabItem.Disabled.Background}" />
                            <Setter TargetName="mainBorder" Property="BorderBrush" Value="{StaticResource TabItem.Disabled.Border}" />
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,0,1,1" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,0,1,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Value="false" Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" />
                                <Condition Value="Right" Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="contentPresenter" Property="Opacity" Value="0.56" />
                            <Setter TargetName="mainBorder" Property="Background" Value="{StaticResource TabItem.Disabled.Background}" />
                            <Setter TargetName="mainBorder" Property="BorderBrush" Value="{StaticResource TabItem.Disabled.Border}" />
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="0,1,1,1" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="0,1,1,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Value="false" Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" />
                                <Condition Value="Top" Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="contentPresenter" Property="Opacity" Value="0.56" />
                            <Setter TargetName="mainBorder" Property="Background" Value="{StaticResource TabItem.Disabled.Background}" />
                            <Setter TargetName="mainBorder" Property="BorderBrush" Value="{StaticResource TabItem.Disabled.Border}" />
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,1,1,0" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,1,0" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Value="false" Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" />
                                <Condition Value="Left" Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,1,0,1" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,0,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Value="true" Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" />
                                <Condition Value="Left" Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Panel.ZIndex" Value="1" />
                            <Setter Property="Margin" Value="-2,-2,0,-2" />
                            <Setter TargetName="innerBorder" Property="Opacity" Value="1" />
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,1,0,1" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,0,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Value="false" Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" />
                                <Condition Value="Bottom" Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,0,1,1" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,0,1,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Value="true" Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" />
                                <Condition Value="Bottom" Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Panel.ZIndex" Value="1" />
                            <Setter Property="Margin" Value="-2,0,-2,-2" />
                            <Setter TargetName="innerBorder" Property="Opacity" Value="1" />
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,0,1,1" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,0,1,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Value="false" Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" />
                                <Condition Value="Right" Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="0,1,1,1" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="0,1,1,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Value="true" Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" />
                                <Condition Value="Right" Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Panel.ZIndex" Value="1" />
                            <Setter Property="Margin" Value="0,-2,-2,-2" />
                            <Setter TargetName="innerBorder" Property="Opacity" Value="1" />
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="0,1,1,1" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="0,1,1,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Value="false" Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" />
                                <Condition Value="Top" Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,1,1,0" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,1,0" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Value="true" Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" />
                                <Condition Value="Top" Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Panel.ZIndex" Value="1" />
                            <Setter Property="Margin" Value="-2,-2,-2,0" />
                            <Setter TargetName="innerBorder" Property="Opacity" Value="1" />
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,1,1,0" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,1,0" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>