//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Infrastructure.Resources.Strings {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class GeneralComponentsStrings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal GeneralComponentsStrings() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Infrastructure.Resources.Strings.GeneralComponentsStrings", typeof(GeneralComponentsStrings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Abort deceleration in progress.
        /// </summary>
        public static string AbortDecelerationInProgress {
            get {
                return ResourceManager.GetString("AbortDecelerationInProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Abort input.
        /// </summary>
        public static string AbortInput {
            get {
                return ResourceManager.GetString("AbortInput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на All cards addressed serially.
        /// </summary>
        public static string AllCardsAddressedSerially {
            get {
                return ResourceManager.GetString("AllCardsAddressedSerially", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Amplifier en.
        /// </summary>
        public static string AmplifierEn {
            get {
                return ResourceManager.GetString("AmplifierEn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Amplifier fault error.
        /// </summary>
        public static string AmplifierFaultError {
            get {
                return ResourceManager.GetString("AmplifierFaultError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ASCII rotary buffer open.
        /// </summary>
        public static string ASCIIRotaryBufferOpen {
            get {
                return ResourceManager.GetString("ASCIIRotaryBufferOpen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Assigned to CS.
        /// </summary>
        public static string AssignedToCS {
            get {
                return ResourceManager.GetString("AssignedToCS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на AUTO.
        /// </summary>
        public static string Auto {
            get {
                return ResourceManager.GetString("Auto", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на SELECT AXIS TO JOG:.
        /// </summary>
        public static string AxisToJog {
            get {
                return ResourceManager.GetString("AxisToJog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Backlash direction flag.
        /// </summary>
        public static string BacklashDirectionFlag {
            get {
                return ResourceManager.GetString("BacklashDirectionFlag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Binary rotary buffer open.
        /// </summary>
        public static string BinaryRotaryBufferOpen {
            get {
                return ResourceManager.GetString("BinaryRotaryBufferOpen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Block request.
        /// </summary>
        public static string BlockRequest {
            get {
                return ResourceManager.GetString("BlockRequest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Burn Time ms.
        /// </summary>
        public static string BurnTime {
            get {
                return ResourceManager.GetString("BurnTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Capture on error en.
        /// </summary>
        public static string CaptureOnErrorEn {
            get {
                return ResourceManager.GetString("CaptureOnErrorEn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Clear camera.
        /// </summary>
        public static string ClearCamera {
            get {
                return ResourceManager.GetString("ClearCamera", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Commutation enable.
        /// </summary>
        public static string CommutationEnable {
            get {
                return ResourceManager.GetString("CommutationEnable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Compensate table on.
        /// </summary>
        public static string CompensateTableOn {
            get {
                return ResourceManager.GetString("CompensateTableOn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на CS1 bit 0.
        /// </summary>
        public static string CS1Bit0 {
            get {
                return ResourceManager.GetString("CS1Bit0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на CS1 bit 1.
        /// </summary>
        public static string CS1Bit1 {
            get {
                return ResourceManager.GetString("CS1Bit1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на CS1 bit 2.
        /// </summary>
        public static string CS1Bit2 {
            get {
                return ResourceManager.GetString("CS1Bit2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на CS1 bit 3.
        /// </summary>
        public static string CS1Bit3 {
            get {
                return ResourceManager.GetString("CS1Bit3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на CS axis definition bit 0.
        /// </summary>
        public static string CSAxisDefinitionBit0 {
            get {
                return ResourceManager.GetString("CSAxisDefinitionBit0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на CS axis definition bit 1.
        /// </summary>
        public static string CSAxisDefinitionBit1 {
            get {
                return ResourceManager.GetString("CSAxisDefinitionBit1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на CS axis definition bit 2.
        /// </summary>
        public static string CSAxisDefinitionBit2 {
            get {
                return ResourceManager.GetString("CSAxisDefinitionBit2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на CS axis definition bit 3.
        /// </summary>
        public static string CSAxisDefinitionBit3 {
            get {
                return ResourceManager.GetString("CSAxisDefinitionBit3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Cutting Speed mm per minute.
        /// </summary>
        public static string CuttingSpeed {
            get {
                return ResourceManager.GetString("CuttingSpeed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Data block error.
        /// </summary>
        public static string DataBlockError {
            get {
                return ResourceManager.GetString("DataBlockError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Data gathering enabled.
        /// </summary>
        public static string DataGatheringEnabled {
            get {
                return ResourceManager.GetString("DataGatheringEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Desired position limit stop.
        /// </summary>
        public static string DesiredPositionLimitStop {
            get {
                return ResourceManager.GetString("DesiredPositionLimitStop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Desired velocity null.
        /// </summary>
        public static string DesiredVelocityNull {
            get {
                return ResourceManager.GetString("DesiredVelocityNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на DPRam error.
        /// </summary>
        public static string DPRamError {
            get {
                return ResourceManager.GetString("DPRamError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Dwell in progress.
        /// </summary>
        public static string DwellInProgress {
            get {
                return ResourceManager.GetString("DwellInProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на EAROM error.
        /// </summary>
        public static string EAROMError {
            get {
                return ResourceManager.GetString("EAROMError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Are you want to save changes?.
        /// </summary>
        public static string EditExitMessage {
            get {
                return ResourceManager.GetString("EditExitMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Question.
        /// </summary>
        public static string EditExitTitle {
            get {
                return ResourceManager.GetString("EditExitTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ext servo algo en.
        /// </summary>
        public static string ExtServoAlgoEn {
            get {
                return ResourceManager.GetString("ExtServoAlgoEn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Fatal following error ex.
        /// </summary>
        public static string FatalFollowingErrorEx {
            get {
                return ResourceManager.GetString("FatalFollowingErrorEx", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Firmware checksum error.
        /// </summary>
        public static string FirmwareChecksumError {
            get {
                return ResourceManager.GetString("FirmwareChecksumError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Fixed buffer full.
        /// </summary>
        public static string FixedBufferFull {
            get {
                return ResourceManager.GetString("FixedBufferFull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Foreground in position.
        /// </summary>
        public static string ForegroundInPosition {
            get {
                return ResourceManager.GetString("ForegroundInPosition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Gather on external trig.
        /// </summary>
        public static string GatherOnExternalTrig {
            get {
                return ResourceManager.GetString("GatherOnExternalTrig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на G-Code.
        /// </summary>
        public static string GCode {
            get {
                return ResourceManager.GetString("GCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на General.
        /// </summary>
        public static string General {
            get {
                return ResourceManager.GetString("General", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на General checksum error.
        /// </summary>
        public static string GeneralChecksumError {
            get {
                return ResourceManager.GetString("GeneralChecksumError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Grav Speed mm per minute.
        /// </summary>
        public static string GravSpeed {
            get {
                return ResourceManager.GetString("GravSpeed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на HOLD BUTTON TO JOG CONTINUOUS:.
        /// </summary>
        public static string HoldButtonToJog {
            get {
                return ResourceManager.GetString("HoldButtonToJog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Home complete.
        /// </summary>
        public static string HomeComplete {
            get {
                return ResourceManager.GetString("HomeComplete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Home search in progress.
        /// </summary>
        public static string HomeSearchInProgress {
            get {
                return ResourceManager.GetString("HomeSearchInProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на I2T amplifier fault error.
        /// </summary>
        public static string I2TAmplifierFaultError {
            get {
                return ResourceManager.GetString("I2TAmplifierFaultError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Illegal L variable definition.
        /// </summary>
        public static string IllegalLVariableDefinition {
            get {
                return ResourceManager.GetString("IllegalLVariableDefinition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Incremental distance:.
        /// </summary>
        public static string IncrementalDistance {
            get {
                return ResourceManager.GetString("IncrementalDistance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на In position true.
        /// </summary>
        public static string InPositionTrue {
            get {
                return ResourceManager.GetString("InPositionTrue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Integrated fatal following error.
        /// </summary>
        public static string IntegratedFatalFollowingError {
            get {
                return ResourceManager.GetString("IntegratedFatalFollowingError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Integration mode.
        /// </summary>
        public static string IntegrationMode {
            get {
                return ResourceManager.GetString("IntegrationMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на JOG INCREMENTAL:.
        /// </summary>
        public static string JogIncremental {
            get {
                return ResourceManager.GetString("JogIncremental", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на JOG INCREMENTAL (um):.
        /// </summary>
        public static string JogIncrementalMkm {
            get {
                return ResourceManager.GetString("JogIncrementalMkm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на LASER.
        /// </summary>
        public static string Laser {
            get {
                return ResourceManager.GetString("Laser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Macro auxiliary mode.
        /// </summary>
        public static string MacroAuxiliaryMode {
            get {
                return ResourceManager.GetString("MacroAuxiliaryMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Macro communication error.
        /// </summary>
        public static string MacroCommunicationError {
            get {
                return ResourceManager.GetString("MacroCommunicationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Macro ring break.
        /// </summary>
        public static string MacroRingBreak {
            get {
                return ResourceManager.GetString("MacroRingBreak", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Macro ring error.
        /// </summary>
        public static string MacroRingError {
            get {
                return ResourceManager.GetString("MacroRingError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Macro ring rcvd break msg.
        /// </summary>
        public static string MacroRingRcvdBreakMsg {
            get {
                return ResourceManager.GetString("MacroRingRcvdBreakMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Macro ring synch packet fault.
        /// </summary>
        public static string MacroRingSynchPacketFault {
            get {
                return ResourceManager.GetString("MacroRingSynchPacketFault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Macro ring test enable.
        /// </summary>
        public static string MacroRingTestEnable {
            get {
                return ResourceManager.GetString("MacroRingTestEnable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Macro servo clock sync.
        /// </summary>
        public static string MacroServoClockSync {
            get {
                return ResourceManager.GetString("MacroServoClockSync", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Main error.
        /// </summary>
        public static string MainError {
            get {
                return ResourceManager.GetString("MainError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на MANUAL.
        /// </summary>
        public static string Manual {
            get {
                return ResourceManager.GetString("Manual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на MANUAL EXT.
        /// </summary>
        public static string ManualExt {
            get {
                return ResourceManager.GetString("ManualExt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Maximal Cutting Power %.
        /// </summary>
        public static string MaximalCuttingPower {
            get {
                return ResourceManager.GetString("MaximalCuttingPower", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Maximal Grav Power %.
        /// </summary>
        public static string MaximalGravPower {
            get {
                return ResourceManager.GetString("MaximalGravPower", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на MDI.
        /// </summary>
        public static string Mdi {
            get {
                return ResourceManager.GetString("Mdi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Minimal Cutting Power %.
        /// </summary>
        public static string MinimalCuttingPower {
            get {
                return ResourceManager.GetString("MinimalCuttingPower", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Minimal Grav Power %.
        /// </summary>
        public static string MinimalGravPower {
            get {
                return ResourceManager.GetString("MinimalGravPower", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Modbus active.
        /// </summary>
        public static string ModbusActive {
            get {
                return ResourceManager.GetString("ModbusActive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Motion buffer open.
        /// </summary>
        public static string MotionBufferOpen {
            get {
                return ResourceManager.GetString("MotionBufferOpen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Motor 1.
        /// </summary>
        public static string Motor1 {
            get {
                return ResourceManager.GetString("Motor1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Motor 2.
        /// </summary>
        public static string Motor2 {
            get {
                return ResourceManager.GetString("Motor2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Motor 3.
        /// </summary>
        public static string Motor3 {
            get {
                return ResourceManager.GetString("Motor3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Motor 4.
        /// </summary>
        public static string Motor4 {
            get {
                return ResourceManager.GetString("Motor4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Motor 5.
        /// </summary>
        public static string Motor5 {
            get {
                return ResourceManager.GetString("Motor5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Motor 6.
        /// </summary>
        public static string Motor6 {
            get {
                return ResourceManager.GetString("Motor6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Motor 7.
        /// </summary>
        public static string Motor7 {
            get {
                return ResourceManager.GetString("Motor7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Motor 8.
        /// </summary>
        public static string Motor8 {
            get {
                return ResourceManager.GetString("Motor8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Motor activated.
        /// </summary>
        public static string MotorActivated {
            get {
                return ResourceManager.GetString("MotorActivated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Motor phase request.
        /// </summary>
        public static string MotorPhaseRequest {
            get {
                return ResourceManager.GetString("MotorPhaseRequest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Move timer active.
        /// </summary>
        public static string MoveTimerActive {
            get {
                return ResourceManager.GetString("MoveTimerActive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Negative end limit set.
        /// </summary>
        public static string NegativeEndLimitSet {
            get {
                return ResourceManager.GetString("NegativeEndLimitSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на OFFSETS.
        /// </summary>
        public static string Offsets {
            get {
                return ResourceManager.GetString("Offsets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Open loop mode.
        /// </summary>
        public static string OpenLoopMode {
            get {
                return ResourceManager.GetString("OpenLoopMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Phase сlock missing.
        /// </summary>
        public static string PhaseClockMissing {
            get {
                return ResourceManager.GetString("PhaseClockMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Phasing search error.
        /// </summary>
        public static string PhasingSearchError {
            get {
                return ResourceManager.GetString("PhasingSearchError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на PLC buffer open.
        /// </summary>
        public static string PLCBufferOpen {
            get {
                return ResourceManager.GetString("PLCBufferOpen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на PLOT.
        /// </summary>
        public static string Plot {
            get {
                return ResourceManager.GetString("Plot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 3D Visualizer: bad gcode format..
        /// </summary>
        public static string PlotBadFileFormat {
            get {
                return ResourceManager.GetString("PlotBadFileFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Position following en.
        /// </summary>
        public static string PosFollowEn {
            get {
                return ResourceManager.GetString("PosFollowEn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Position follow offset mode.
        /// </summary>
        public static string PosFollowOffsetMode {
            get {
                return ResourceManager.GetString("PosFollowOffsetMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Positive end limit set.
        /// </summary>
        public static string PositiveEndLimitSet {
            get {
                return ResourceManager.GetString("PositiveEndLimitSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Rapid max velocity select.
        /// </summary>
        public static string RapidMaxVelocitySelect {
            get {
                return ResourceManager.GetString("RapidMaxVelocitySelect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Real time interrupt warning.
        /// </summary>
        public static string RealTimeInterruptWarning {
            get {
                return ResourceManager.GetString("RealTimeInterruptWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Are you sure to reset all offsets?.
        /// </summary>
        public static string ResetAllOffsetsMessage {
            get {
                return ResourceManager.GetString("ResetAllOffsetsMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Reset offsets confirmation.
        /// </summary>
        public static string ResetAllOffsetsTitle {
            get {
                return ResourceManager.GetString("ResetAllOffsetsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ring active.
        /// </summary>
        public static string RingActive {
            get {
                return ResourceManager.GetString("RingActive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на RTI reentry error.
        /// </summary>
        public static string RTIReEntryError {
            get {
                return ResourceManager.GetString("RTIReEntryError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на SELECT JOG SPEED:.
        /// </summary>
        public static string SelectJogSpeed {
            get {
                return ResourceManager.GetString("SelectJogSpeed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Servo error.
        /// </summary>
        public static string ServoError {
            get {
                return ResourceManager.GetString("ServoError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Servo macro IC config error.
        /// </summary>
        public static string ServoMacroICConfigError {
            get {
                return ResourceManager.GetString("ServoMacroICConfigError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Are you sure to set all offsets to current position?.
        /// </summary>
        public static string SetAllOffsetsMessage {
            get {
                return ResourceManager.GetString("SetAllOffsetsMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Set all offsets confirmation.
        /// </summary>
        public static string SetAllOffsetsTitle {
            get {
                return ResourceManager.GetString("SetAllOffsetsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Sign Magnitude Servo En.
        /// </summary>
        public static string SignMagnitudeServoEn {
            get {
                return ResourceManager.GetString("SignMagnitudeServoEn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Small memory TurboPMAC.
        /// </summary>
        public static string SmallMemoryTurboPMAC {
            get {
                return ResourceManager.GetString("SmallMemoryTurboPMAC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Software capture en.
        /// </summary>
        public static string SoftwareCaptureEn {
            get {
                return ResourceManager.GetString("SoftwareCaptureEn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на STATUS.
        /// </summary>
        public static string StatusString {
            get {
                return ResourceManager.GetString("StatusString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Stopped on position limit.
        /// </summary>
        public static string StoppedOnPositionLimit {
            get {
                return ResourceManager.GetString("StoppedOnPositionLimit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на TERMINAL.
        /// </summary>
        public static string Terminal {
            get {
                return ResourceManager.GetString("Terminal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на This card addressed serially.
        /// </summary>
        public static string ThisCardAddressedSerially {
            get {
                return ResourceManager.GetString("ThisCardAddressedSerially", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Tool diameter.
        /// </summary>
        public static string ToolDiameter {
            get {
                return ResourceManager.GetString("ToolDiameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Tool length.
        /// </summary>
        public static string ToolLength {
            get {
                return ResourceManager.GetString("ToolLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Tool number.
        /// </summary>
        public static string ToolNumber {
            get {
                return ResourceManager.GetString("ToolNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на TOOL OFFSETS.
        /// </summary>
        public static string ToolOffsets {
            get {
                return ResourceManager.GetString("ToolOffsets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Trigger move.
        /// </summary>
        public static string TriggerMove {
            get {
                return ResourceManager.GetString("TriggerMove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на TWS variable parity error.
        /// </summary>
        public static string TWSVariableParityError {
            get {
                return ResourceManager.GetString("TWSVariableParityError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на User written phase en.
        /// </summary>
        public static string UserWrittenPhaseEn {
            get {
                return ResourceManager.GetString("UserWrittenPhaseEn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на User written servo en.
        /// </summary>
        public static string UserWrittenServoEn {
            get {
                return ResourceManager.GetString("UserWrittenServoEn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Warning following error ex.
        /// </summary>
        public static string WarningFollowingErrorEx {
            get {
                return ResourceManager.GetString("WarningFollowingErrorEx", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Y2 Offset.
        /// </summary>
        public static string Y2Offset {
            get {
                return ResourceManager.GetString("Y2Offset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Y addr commute enc.
        /// </summary>
        public static string YaddrCommuteEnc {
            get {
                return ResourceManager.GetString("YaddrCommuteEnc", resourceCulture);
            }
        }
    }
}
