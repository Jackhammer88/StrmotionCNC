<UserControl x:Class="LaserSettings.Views.LaserSettingsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:LaserSettings.Views"
             xmlns:prism="http://prismlibrary.com/"
             prism:ViewModelLocator.AutoWireViewModel="True"
             xmlns:abc="clr-namespace:LaserSettings.Models.JsonModel"
             xmlns:res="clr-namespace:LaserSettings.Resources"
             xmlns:converters="http://www.infrastructure.cnc.com/converters"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:localConverter="clr-namespace:LaserSettings.Resources.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <localConverter:TabItemHeaderFromResourcesConverter x:Key="TabItemHeaderFromResourcesConverter"/>

        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TabItemStyle2" TargetType="{x:Type TabItem}" BasedOn="{StaticResource TabItemStyle1}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Background" Value="{StaticResource TabItem.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TabItem.Static.Border}"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Padding" Value="6,2,6,2"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid x:Name="templateRoot" SnapsToDevicePixels="true" MinHeight="35" MinWidth="100" ScrollViewer.VerticalScrollBarVisibility="Auto">
                            <Border x:Name="mainBorder" Padding="1" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,0" Margin="0">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Offset="0" Color="#FFF0F0F0" />
                                        <GradientStop Offset="1" Color="#FFE5E5E5" />
                                        <GradientStop Offset="0.5" Color="#FF92B3DC" />
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Border x:Name="innerBorder" BorderBrush="{StaticResource TabItem.Selected.Border}" BorderThickness="1,1,1,0" Background="{StaticResource TabItem.Selected.Background}" Margin="-1" Opacity="0"/>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" TextBlock.FontWeight="DemiBold" Content="{Binding TableName, Converter={StaticResource TabItemHeaderFromResourcesConverter}}" Focusable="False" 
                                              HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" 
                                                Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                 VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                            <!--ContentSource="Header"-->
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="-2,-2,0,-2"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="-2,0,-2,-2"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="0,-2,-2,-2"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="-2,-2,-2,0"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid Background="AliceBlue" >
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Border Background="White" Grid.ColumnSpan="3">
            <TextBlock Margin="2" FontWeight="Bold" Text="{Binding DataItems.MaterialType}" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="18" Style="{StaticResource lbTextBlockStyle}"/>
        </Border>
        <TabControl DataContext="{Binding DataItems}" Grid.Row="1" Grid.ColumnSpan="3" Grid.RowSpan="2" ItemsSource="{Binding Tables}" DisplayMemberPath="TableName" TabStripPlacement="Left" ItemContainerStyle="{DynamicResource TabItemStyle2}">
            <TabControl.ContentTemplate>
                <DataTemplate DataType="{x:Type abc:Table}">
                    <ContentControl DataContext="{Binding Parameters}">
                        <Grid Background="LightGray">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid.Resources>
                                <Style TargetType="TextBlock">
                                    <Setter Property="VerticalAlignment" Value="Center"/>
                                    <Setter Property="Padding" Value="3"/>
                                    <Setter Property="FontSize" Value="17"/>
                                    <Setter Property="FontWeight" Value="DemiBold"/>
                                </Style>
                                <Style TargetType="TextBox">
                                    <Setter Property="TextAlignment" Value="Justify"/>
                                    <Setter Property="FontSize" Value="17"/>
                                </Style>
                                <Style TargetType="Border">
                                    <Setter Property="BorderBrush" Value="Gray"/>
                                    <Setter Property="BorderThickness" Value="1"/>
                                </Style>
                                <Style TargetType="ComboBox">
                                    <Setter Property="FontSize" Value="17"/>
                                </Style>
                                <converters:LaserParametersUniversalConverter x:Key="LaserParametersUniversalConverter"/>
                                <converters:LaserSettingsComboBoxToEnumConverter x:Key="LaserSettingsComboBoxToEnumConverter"/>
                                <sys:String x:Key="Gas">Gas</sys:String>
                                <sys:String x:Key="Burning">Burning</sys:String>
                                <sys:String x:Key="RoundedOn">RoundedOn</sys:String>
                            </Grid.Resources>
                            <Border Grid.Row="0">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="270"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock x:Name="tbAcceleration" Text="{x:Static res:GeneralStrings.Acceleration}"/>
                                    <TextBox Grid.Column="1" Text="{Binding Acceleration, UpdateSourceTrigger=PropertyChanged, Converter={converters:LaserParametersUniversalConverter LowerTreshold=0, UpperTreshold=10}, Delay=800}"/>
                                </Grid>
                            </Border>
                            <Border Grid.Row="1">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="270"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="{x:Static res:GeneralStrings.BeamDiameter}"/>
                                    <TextBox Grid.Column="1" Text="{Binding BeamDiameter, UpdateSourceTrigger=PropertyChanged, Converter={converters:LaserParametersUniversalConverter LowerTreshold=0, UpperTreshold=10}, Delay=800}"/>
                                </Grid>
                            </Border>
                            <Border Grid.Row="2">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="270"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="{x:Static res:GeneralStrings.BurningTime}"/>
                                    <TextBox Grid.Column="1" Text="{Binding BurningTime, UpdateSourceTrigger=PropertyChanged, Converter={converters:LaserParametersUniversalConverter LowerTreshold=0, UpperTreshold=10}, Delay=800}"/>
                                </Grid>
                            </Border>
                            <Border Grid.Row="3">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="270"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="{x:Static res:GeneralStrings.BurningType}"/>
                                    <ComboBox Grid.Column="1" SelectedIndex="{Binding BurningType, Converter={StaticResource LaserSettingsComboBoxToEnumConverter}, ConverterParameter={StaticResource Burning}}">
                                        <ComboBoxItem Content="" Visibility="Collapsed"/>
                                        <ComboBoxItem Content="Direct"/>
                                        <ComboBoxItem Content="Jumping"/>
                                    </ComboBox>
                                </Grid>
                            </Border>
                            <Border Grid.Row="4">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="270"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="{x:Static res:GeneralStrings.Coefficient}"/>
                                    <TextBox Grid.Column="1" Text="{Binding Coefficient, UpdateSourceTrigger=PropertyChanged, Converter={converters:LaserParametersUniversalConverter LowerTreshold=0, UpperTreshold=10}, Delay=800}"/>
                                </Grid>
                            </Border>
                            <Border Grid.Row="5">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="270"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="{x:Static res:GeneralStrings.Feedrate}"/>
                                    <TextBox Grid.Column="1" Text="{Binding Feedrate, UpdateSourceTrigger=PropertyChanged, Converter={converters:LaserParametersUniversalConverter LowerTreshold=0, UpperTreshold=10}, Delay=800}"/>
                                </Grid>
                            </Border>
                            <Border Grid.Row="6">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="270"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="{x:Static res:GeneralStrings.LaserPower}"/>
                                    <TextBox Grid.Column="1" Text="{Binding LaserPower, UpdateSourceTrigger=PropertyChanged, Converter={converters:LaserParametersUniversalConverter LowerTreshold=0, UpperTreshold=10}, Delay=800}"/>
                                </Grid>
                            </Border>
                            <Border Grid.Row="7">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="270"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="{x:Static res:GeneralStrings.MinLaserPower}"/>
                                    <TextBox Grid.Column="1" Text="{Binding MinLaserPower, UpdateSourceTrigger=PropertyChanged, Converter={converters:LaserParametersUniversalConverter LowerTreshold=0, UpperTreshold=10}, Delay=800}"/>
                                </Grid>
                            </Border>
                            <Border Grid.Row="8">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="270"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="{x:Static res:GeneralStrings.Gap}"/>
                                    <TextBox Grid.Column="1" Text="{Binding Gap, UpdateSourceTrigger=PropertyChanged, Converter={converters:LaserParametersUniversalConverter LowerTreshold=0, UpperTreshold=10}, Delay=800}"/>
                                </Grid>
                            </Border>
                            <Border Grid.Row="9">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="270"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="{x:Static res:GeneralStrings.LaserFocus}"/>
                                    <TextBox Grid.Column="1" Text="{Binding LaserFocus, UpdateSourceTrigger=PropertyChanged, Converter={converters:LaserParametersUniversalConverter LowerTreshold=0, UpperTreshold=10}, Delay=800}"/>
                                </Grid>
                            </Border>
                            <Border Grid.Row="10">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="270"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="{x:Static res:GeneralStrings.GasType}"/>
                                    <ComboBox SelectedIndex="{Binding GasType, Converter={StaticResource LaserSettingsComboBoxToEnumConverter}, ConverterParameter={StaticResource Gas}}" Grid.Column="1">
                                        <ComboBoxItem Content="" Visibility="Collapsed"/>
                                        <ComboBoxItem Content="{x:Static res:GeneralStrings.Air}"/>
                                        <ComboBoxItem Content="{x:Static res:GeneralStrings.Oxygen}"/>
                                        <ComboBoxItem Content="{x:Static res:GeneralStrings.Nitrogen}"/>
                                    </ComboBox>
                                </Grid>
                            </Border>
                            <Border Grid.Row="11">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="270"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="{x:Static res:GeneralStrings.GasPressure}"/>
                                    <TextBox Grid.Column="1" Text="{Binding GasPressure, UpdateSourceTrigger=PropertyChanged, Converter={converters:LaserParametersUniversalConverter LowerTreshold=0, UpperTreshold=10}, Delay=800}"/>
                                </Grid>
                            </Border>
                            <Border Grid.Row="12">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="270"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="{x:Static res:GeneralStrings.ImpFrequeency}"/>
                                    <TextBox Grid.Column="1" Text="{Binding ImpFrequeency, UpdateSourceTrigger=PropertyChanged, Converter={converters:LaserParametersUniversalConverter LowerTreshold=0, UpperTreshold=10}, Delay=800}"/>
                                </Grid>
                            </Border>
                            <Border Grid.Row="13">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="270"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="{x:Static res:GeneralStrings.ImpDutyCycle}"/>
                                    <TextBox Grid.Column="1" Text="{Binding ImpDutyCycle, UpdateSourceTrigger=PropertyChanged, Converter={converters:LaserParametersUniversalConverter LowerTreshold=0, UpperTreshold=10}, Delay=800}"/>
                                </Grid>
                            </Border>
                            <Border Grid.Row="14">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="270"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="{x:Static res:GeneralStrings.RampNo}"/>
                                    <TextBox Grid.Column="1" Text="{Binding RampNo, UpdateSourceTrigger=PropertyChanged, Converter={converters:LaserParametersUniversalConverter LowerTreshold=0, UpperTreshold=10}, Delay=800}"/>
                                </Grid>
                            </Border>
                            <Border Grid.Row="15">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="270"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="{x:Static res:GeneralStrings.NozzleDiameter}"/>
                                    <TextBox Grid.Column="1" Text="{Binding NozzleDiameter, UpdateSourceTrigger=PropertyChanged, Converter={converters:LaserParametersUniversalConverter LowerTreshold=0, UpperTreshold=10}, Delay=800}"/>
                                </Grid>
                            </Border>
                            <Border Grid.Row="16">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="270"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="{x:Static res:GeneralStrings.FollowingOn}"/>
                                    <ComboBox Grid.Column="1" SelectedIndex="{Binding FollowingOn, Converter={StaticResource LaserSettingsComboBoxToEnumConverter}, ConverterParameter={StaticResource RoundedOn}}">
                                        <ComboBoxItem Content="On"/>
                                        <ComboBoxItem Content="Off"/>
                                    </ComboBox>
                                </Grid>
                            </Border>
                            <Border Grid.Row="17">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="270"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="{x:Static res:GeneralStrings.SensorSensitivityI1}"/>
                                    <TextBox Grid.Column="1" Text="{Binding SensorSensitivityI1, UpdateSourceTrigger=PropertyChanged, Converter={converters:LaserParametersUniversalConverter LowerTreshold=0, UpperTreshold=10}, Delay=800}"/>
                                </Grid>
                            </Border>
                            <Border Grid.Row="18">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="270"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="{x:Static res:GeneralStrings.SensorSensitivityI2}"/>
                                    <TextBox Grid.Column="1" Text="{Binding SensorSensitivityI2, UpdateSourceTrigger=PropertyChanged, Converter={converters:LaserParametersUniversalConverter LowerTreshold=0, UpperTreshold=10}, Delay=800}"/>
                                </Grid>
                            </Border>
                            <Border Grid.Row="19">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="270"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="{x:Static res:GeneralStrings.RoundedOn}"/>
                                    <ComboBox Grid.Column="1" SelectedIndex="{Binding RoundedOn, Converter={StaticResource LaserSettingsComboBoxToEnumConverter}, ConverterParameter={StaticResource RoundedOn}}">
                                        <ComboBoxItem Content="On"/>
                                        <ComboBoxItem Content="Off"/>
                                    </ComboBox>
                                </Grid>
                            </Border>
                        </Grid>
                    </ContentControl>
                </DataTemplate>
            </TabControl.ContentTemplate>
        </TabControl>
        <Button Command="{Binding LoadParametersCommand}" Grid.Row="2" Grid.Column="0" Content="Open" Margin="25 0 0 15" Width="60" Height="60" Template="{StaticResource ButtonBaseControlTemplate1}"/>
    </Grid>
</UserControl>
