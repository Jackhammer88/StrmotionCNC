<UserControl x:Class="BottomButtons.Views.Bottom"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:res="http://www.infrastructure.cnc.com/resources"
             xmlns:local="clr-namespace:BottomButtons.Views"
             mc:Ignorable="d" 
             xmlns:prism="http://prismlibrary.com/"
             xmlns:converters="http://www.infrastructure.cnc.com/converters"
             prism:ViewModelLocator.AutoWireViewModel="True"
             d:DesignHeight="60" d:DesignWidth="1024">
    <UserControl.Resources>
        <ControlTemplate x:Key="ButtonBaseControlTemplate2" TargetType="{x:Type ButtonBase}">
            <ControlTemplate.Resources>
                <Storyboard x:Key="Storyboard1">
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="border">
                        <EasingDoubleKeyFrame KeyTime="0" Value="1.05"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="border">
                        <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="border">
                        <EasingDoubleKeyFrame KeyTime="0" Value="1.05"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="border">
                        <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
            </ControlTemplate.Resources>
            <Border x:Name="border" BorderThickness="1.5" SnapsToDevicePixels="True" CornerRadius="5" BorderBrush="#FF3152A0" RenderTransformOrigin="0.5,0.5" Margin="5">
                <Border.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Border.RenderTransform>
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFF0F6FE" Offset="0"/>
                        <GradientStop Color="White" Offset="1"/>
                        <GradientStop Color="#FFAFC8E0" Offset="0.5"/>
                    </LinearGradientBrush>
                </Border.Background>
                <TextBlock Text="{TemplateBinding Content}" FontWeight="Bold" Foreground="#30509F" FontSize="17" TextWrapping="Wrap" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.ExitActions>
                        <RemoveStoryboard BeginStoryboardName="Storyboard1_BeginStoryboard"/>
                    </Trigger.ExitActions>
                    <Trigger.EnterActions>
                        <BeginStoryboard x:Name="Storyboard1_BeginStoryboard" Storyboard="{StaticResource Storyboard1}"/>
                    </Trigger.EnterActions>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Opacity" TargetName="border" Value="0.7"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                    <Setter Property="Foreground" Value="#FF838383"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <converters:StartButtonEnabledConverter x:Key="StartButtonEnabledConverter"/>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
		<RadioButton Content="{x:Static res:BottomButtonsStrings.Auto}" Grid.Column="0" Style="{DynamicResource MachineStateRadioButtonStyle}" IsEnabled="{Binding MachineIsLocked, Converter={converters:BoolInverseConverter}}" Template="{DynamicResource RadioButtonBaseControlTemplate1}" GroupName="MachineState" IsChecked="{Binding IsAuto}" Command="{Binding ChangeMachineState}" CommandParameter="1"/>
        <RadioButton Content="{x:Static res:BottomButtonsStrings.Mdi}" Grid.Column="1" Style="{DynamicResource MachineStateRadioButtonStyle}" IsEnabled="{Binding MachineIsLocked, Converter={converters:BoolInverseConverter}}" Template="{DynamicResource RadioButtonBaseControlTemplate1}" GroupName="MachineState" IsChecked="{Binding IsMDI}" Command="{Binding ChangeMachineState}"  CommandParameter="3"/>
        <RadioButton Content="{x:Static res:BottomButtonsStrings.Manual}" Grid.Column="2" Style="{DynamicResource MachineStateRadioButtonStyle}" IsEnabled="{Binding MachineIsLocked, Converter={converters:BoolInverseConverter}}" Template="{DynamicResource RadioButtonBaseControlTemplate1}" IsChecked="{Binding IsManual}" GroupName="MachineState" Command="{Binding ChangeMachineState}" CommandParameter="2"/>
        <RadioButton Grid.Column="3" Content="{x:Static res:BottomButtonsStrings.Test}" Style="{DynamicResource MachineStateRadioButtonStyle}" IsEnabled="{Binding MachineIsLocked, Converter={converters:BoolInverseConverter}}" Template="{DynamicResource RadioButtonBaseControlTemplate1}" IsChecked="{Binding IsTest}" GroupName="MachineState" Command="{Binding ChangeMachineState}" CommandParameter="6"/>

        <Button Content="{x:Static res:BottomButtonsStrings.Start}" Command="{Binding StartCycleCommand}" Grid.Column="4" Style="{DynamicResource ButtonStyle1}" Template="{DynamicResource ButtonBaseControlTemplate1}">
            <Button.IsEnabled>
                <MultiBinding Converter="{StaticResource StartButtonEnabledConverter}">
                    <Binding Path="IsAuto"/>
                    <Binding Path="StartPressed"/>
                </MultiBinding>
            </Button.IsEnabled>
        </Button>
        <ToggleButton Content="{x:Static res:BottomButtonsStrings.Pause}" IsEnabled="{Binding IsAuto}" IsChecked="{Binding IsProgramPaused, Mode=OneWay}" Command="{Binding PauseCommand}" Grid.Column="5" Style="{DynamicResource ButtonStyle1}" Template="{DynamicResource ButtonBaseControlTemplate1}"/>
        <Button Content="{x:Static res:BottomButtonsStrings.Abort}" IsEnabled="{Binding IsAuto}" Command="{Binding AbortCommand}" Grid.Column="6" Style="{DynamicResource ButtonStyle1}" Template="{DynamicResource ButtonBaseControlTemplate1}"/>

		<Button Content="{x:Static res:BottomButtonsStrings.Reset}" Command="{Binding ResetProgramCommand}" IsEnabled="{Binding MachineIsLocked, Converter={converters:BoolInverseConverter}}" Grid.Column="7" Style="{DynamicResource ButtonStyle1}" Template="{DynamicResource ButtonBaseControlTemplate1}"/>
		<Button Content="{x:Static res:BottomButtonsStrings.UserSettings}" Command="{Binding UserSettingsCommand}" IsEnabled="{Binding MachineIsLocked, Converter={converters:BoolInverseConverter}}" Grid.Column="8" Style="{DynamicResource ButtonStyle1}" Template="{DynamicResource ButtonBaseControlTemplate1}"/>
		<Button Content="{x:Static res:BottomButtonsStrings.Keyboard}" Command="{Binding ShowKeyboardCommand}" IsEnabled="{Binding MachineIsLocked, Converter={converters:BoolInverseConverter}}" Grid.Column="9" Style="{DynamicResource ButtonStyle1}" Template="{DynamicResource ButtonBaseControlTemplate1}"/>
		<Button Content="{x:Static res:BottomButtonsStrings.Exit}" Command="{Binding ExitCommand}" IsEnabled="{Binding MachineIsLocked, Converter={converters:BoolInverseConverter}}" Grid.Column="10" Style="{DynamicResource ButtonStyle1}" Template="{DynamicResource ButtonBaseControlTemplate1}"/>
    </Grid>
</UserControl>
