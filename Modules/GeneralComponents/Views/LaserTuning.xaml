<UserControl x:Class="GeneralComponents.Views.LaserTuning"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:GeneralComponents.Views"
             xmlns:res="http://www.infrastructure.cnc.com/resources"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:prism="http://prismlibrary.com/" 
             xmlns:models="clr-namespace:GeneralComponents.Models"
             prism:ViewModelLocator.AutoWireViewModel="True"
             mc:Ignorable="d" 
             d:DesignHeight="500" d:DesignWidth="800" Background="{DynamicResource MainBackgroundColor}">

    <Grid IsEnabled="{Binding ChangingIsAvailable}" >
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="70"/>
        </Grid.RowDefinitions>

        <TextBlock Grid.Row="0" Grid.ColumnSpan="2" Text="Настройки лазера" HorizontalAlignment="Center" FontWeight="Bold" Style="{DynamicResource lbTextBlockStyle2}" Margin="10 10 10 30"/>
        <Separator Grid.Row="1" Grid.ColumnSpan="2"/>
        <TextBlock Grid.Row="2" Text="{x:Static res:GeneralComponentsStrings.MaximalCuttingPower}" Style="{DynamicResource lbTextBlockStyle2}" Margin="10 5 10 5"/>
        <TextBlock Grid.Row="3" Text="{x:Static res:GeneralComponentsStrings.MinimalCuttingPower}" Style="{DynamicResource lbTextBlockStyle2}" Margin="10 5 10 5"/>
        <TextBlock Grid.Row="4" Text="{x:Static res:GeneralComponentsStrings.CuttingSpeed}" Style="{DynamicResource lbTextBlockStyle2}" Margin="10 5 10 5"/>
        <TextBlock Grid.Row="5" Text="{x:Static res:GeneralComponentsStrings.MaximalGravPower}" Style="{DynamicResource lbTextBlockStyle2}" Margin="10 5 10 5"/>
        <TextBlock Grid.Row="6" Text="{x:Static res:GeneralComponentsStrings.MinimalGravPower}" Style="{DynamicResource lbTextBlockStyle2}" Margin="10 5 10 5"/>
        <TextBlock Grid.Row="7" Text="{x:Static res:GeneralComponentsStrings.GravSpeed}" Style="{DynamicResource lbTextBlockStyle2}" Margin="10 5 10 5"/>
        <TextBlock Grid.Row="8" Text="{x:Static res:GeneralComponentsStrings.BurnTime}" Style="{DynamicResource lbTextBlockStyle2}" Margin="10 5 10 5"/>
        <TextBlock Grid.Row="9" Text="{x:Static res:GeneralComponentsStrings.Y2Offset}" Style="{DynamicResource lbTextBlockStyle2}" Margin="10 5 10 5"/>

        <models:TextBoxExtended Grid.Row="2" Grid.Column="1" Margin="5" Padding="5">
            <TextBox.Text>
                <Binding Path="MaximalCuttingPower" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <models:IntegerValidationRule />
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
            <i:Interaction.Triggers>
                <models:EnterKeyDownEventTrigger>
                    <i:InvokeCommandAction Command="{Binding UploadCommand}"/>
                </models:EnterKeyDownEventTrigger>
            </i:Interaction.Triggers>
        </models:TextBoxExtended>
        <models:TextBoxExtended Grid.Row="3" Grid.Column="1" Margin="5" Padding="5">
            <TextBox.Text>
                <Binding Path="MinimalCuttingPower" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <models:IntegerValidationRule />
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
            <i:Interaction.Triggers>
                <models:EnterKeyDownEventTrigger>
                    <i:InvokeCommandAction Command="{Binding UploadCommand}"/>
                </models:EnterKeyDownEventTrigger>
            </i:Interaction.Triggers>
        </models:TextBoxExtended>
        <models:TextBoxExtended Grid.Row="4" Grid.Column="1" Margin="5" Padding="5">
            <TextBox.Text>
                <Binding Path="CuttingSpeed" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <models:IntegerValidationRule MinimalValue="0" MaximalValue="100000"/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
            <i:Interaction.Triggers>
                <models:EnterKeyDownEventTrigger>
                    <i:InvokeCommandAction Command="{Binding UploadCommand}"/>
                </models:EnterKeyDownEventTrigger>
            </i:Interaction.Triggers>
        </models:TextBoxExtended>
        <models:TextBoxExtended Grid.Row="5" Grid.Column="1" Margin="5" Padding="5">
            <TextBox.Text>
                <Binding Path="MaximalGravPower" UpdateSourceTrigger="PropertyChanged" ValidatesOnExceptions="True">
                    <Binding.ValidationRules>
                        <models:IntegerValidationRule />
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
            <i:Interaction.Triggers>
                <models:EnterKeyDownEventTrigger>
                    <i:InvokeCommandAction Command="{Binding UploadCommand}"/>
                </models:EnterKeyDownEventTrigger>
            </i:Interaction.Triggers>
        </models:TextBoxExtended>
        <models:TextBoxExtended Grid.Row="6" Grid.Column="1" Margin="5" Padding="5">
            <TextBox.Text>
                <Binding Path="MinimalGravPower" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <models:IntegerValidationRule />
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
            <i:Interaction.Triggers>
                <models:EnterKeyDownEventTrigger>
                    <i:InvokeCommandAction Command="{Binding UploadCommand}"/>
                </models:EnterKeyDownEventTrigger>
            </i:Interaction.Triggers>
        </models:TextBoxExtended>
        <models:TextBoxExtended Grid.Row="7" Grid.Column="1" Margin="5" Padding="5">
            <TextBox.Text>
                <Binding Path="GravSpeed" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <models:IntegerValidationRule  MinimalValue="0" MaximalValue="100000"/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
            <i:Interaction.Triggers>
                <models:EnterKeyDownEventTrigger>
                    <i:InvokeCommandAction Command="{Binding UploadCommand}"/>
                </models:EnterKeyDownEventTrigger>
            </i:Interaction.Triggers>
        </models:TextBoxExtended>
        <models:TextBoxExtended Grid.Row="8" Grid.Column="1" Margin="5" Padding="5">
            <TextBox.Text>
                <Binding Path="BurnTime" UpdateSourceTrigger="PropertyChanged" ValidatesOnExceptions="True">
                    <Binding.ValidationRules>
                        <models:IntegerValidationRule MinimalValue="0" MaximalValue="60000"/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
            <i:Interaction.Triggers>
                <models:EnterKeyDownEventTrigger>
                    <i:InvokeCommandAction Command="{Binding UploadCommand}"/>
                </models:EnterKeyDownEventTrigger>
            </i:Interaction.Triggers>
        </models:TextBoxExtended>
        <models:TextBoxExtended Grid.Row="9" Grid.Column="1" Margin="5" Padding="5">
            <TextBox.Text>
                <Binding Path="Y2Offset" UpdateSourceTrigger="PropertyChanged" ValidatesOnExceptions="True">
                    <Binding.ValidationRules>
                        <models:IntegerValidationRule MinimalValue="-100000" MaximalValue="100000" />
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
            <i:Interaction.Triggers>
                <models:EnterKeyDownEventTrigger>
                    <i:InvokeCommandAction Command="{Binding UploadCommand}"/>
                </models:EnterKeyDownEventTrigger>
            </i:Interaction.Triggers>
        </models:TextBoxExtended>

        <Separator Grid.Row="10" Grid.ColumnSpan="2"/>

        <StackPanel Grid.Row="11" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Right">
            <Button Grid.Column="1" Content="Стрельнуть" Template="{DynamicResource ButtonBaseControlTemplate1}" Padding="5">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                        <prism:InvokeCommandAction Command="{Binding ShootOnCommand}"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                        <prism:InvokeCommandAction Command="{Binding ShootOffCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>
            <Button Command="{Binding UploadCommand}" Grid.Column="1" Content="Загрузить" Template="{DynamicResource ButtonBaseControlTemplate1}" Padding="5" />
        </StackPanel>
    </Grid>
</UserControl>
