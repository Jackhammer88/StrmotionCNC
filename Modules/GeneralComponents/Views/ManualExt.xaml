<UserControl x:Class="GeneralComponents.Views.ManualExt"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:GeneralComponents.Views"
             xmlns:validation="clr-namespace:GeneralComponents.Models"
             xmlns:resx="http://www.infrastructure.cnc.com/resources"
             xmlns:converters="http://www.infrastructure.cnc.com/converters"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
             mc:Ignorable="d" 
             prism:ViewModelLocator.AutoWireViewModel="True"
             d:DesignHeight="800" d:DesignWidth="800">
    <UserControl.Resources>
        <Style TargetType="{x:Type Grid}">
            <Setter Property="Background" Value="{StaticResource MainBackgroundColor}"/>
        </Style>
        <Style x:Key="MainTextBlockStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="TextWrapping" Value="NoWrap"/>
            <Setter Property="TextTrimming" Value="None"/>
            <Setter Property="Foreground" Value="#FF30509F"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="Margin" Value="17,0,0,0"/>
        </Style>
        <Style x:Key="MainRadioButtonStyle" TargetType="{x:Type RadioButton}">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
        <Style x:Key="TextBoxStyle1" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" CornerRadius="2">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Grid IsEnabled="{Binding IsManualStateSelected}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="136*"/>
            <RowDefinition Height="136*"/>
            <RowDefinition Height="139*"/>
            <RowDefinition Height="175*"/>
            <RowDefinition Height="175*"/>
            <RowDefinition Height="175*"/>
            <RowDefinition Height="175*"/>
            <RowDefinition Height="175*"/>
            <RowDefinition Height="175*"/>
        </Grid.RowDefinitions>
        <TextBlock Grid.ColumnSpan="5" TextWrapping="Wrap" Text="{x:Static resx:GeneralComponentsStrings.SelectJogSpeed}" Style="{DynamicResource MainTextBlockStyle}"/>
        <RadioButton Command="{Binding ChangeSelectedVelocityCommand}" CommandParameter="1" IsChecked="True" Content="x1" GroupName="JogSpeed" Grid.Row="1" Style="{StaticResource MainRadioButtonStyle}" Template="{DynamicResource RadioButtonBaseControlTemplate1}"/>
        <RadioButton Command="{Binding ChangeSelectedVelocityCommand}" CommandParameter="2" Content="x2" GroupName="JogSpeed" Grid.Column="1" Grid.Row="1" Style="{StaticResource MainRadioButtonStyle}" Template="{DynamicResource RadioButtonBaseControlTemplate1}"/>
        <RadioButton Command="{Binding ChangeSelectedVelocityCommand}" CommandParameter="3" Content="x3" GroupName="JogSpeed" Grid.Column="2" Grid.Row="1" Style="{StaticResource MainRadioButtonStyle}" Template="{DynamicResource RadioButtonBaseControlTemplate1}"/>
        <RadioButton Command="{Binding ChangeSelectedVelocityCommand}" CommandParameter="4" Content="x4" GroupName="JogSpeed" Grid.Column="3" Grid.Row="1" Style="{StaticResource MainRadioButtonStyle}" Template="{DynamicResource RadioButtonBaseControlTemplate1}"/>
        <RadioButton Command="{Binding ChangeSelectedVelocityCommand}" CommandParameter="5" Content="x5" GroupName="JogSpeed" Grid.Column="4" Grid.Row="1" Style="{StaticResource MainRadioButtonStyle}" Template="{DynamicResource RadioButtonBaseControlTemplate1}"/>

        <TextBlock Grid.Row="2" Grid.ColumnSpan="5" TextWrapping="Wrap" Text="{x:Static resx:GeneralComponentsStrings.AxisToJog}" Style="{DynamicResource MainTextBlockStyle}"/>
        <RadioButton Command="{Binding ChangeSelectedAxisCommand}" CommandParameter="1" IsChecked="True" Content="X" GroupName="AxisSelect" Grid.Row="3" Style="{StaticResource MainRadioButtonStyle}" Template="{DynamicResource RadioButtonBaseControlTemplate1}"/>
        <RadioButton Command="{Binding ChangeSelectedAxisCommand}" CommandParameter="2" Content="Y" GroupName="AxisSelect" Grid.Column="1" Grid.Row="3" Style="{StaticResource MainRadioButtonStyle}" Template="{DynamicResource RadioButtonBaseControlTemplate1}"/>
        <RadioButton Command="{Binding ChangeSelectedAxisCommand}" CommandParameter="3" Content="Z" GroupName="AxisSelect" Grid.Column="2" Grid.Row="3" Style="{StaticResource MainRadioButtonStyle}" Template="{DynamicResource RadioButtonBaseControlTemplate1}"/>
        <RadioButton Command="{Binding ChangeSelectedAxisCommand}" CommandParameter="4" Content="A" GroupName="AxisSelect" Grid.Column="3" Grid.Row="3" Style="{StaticResource MainRadioButtonStyle}" Template="{DynamicResource RadioButtonBaseControlTemplate1}"/>
        <RadioButton Command="{Binding ChangeSelectedAxisCommand}" CommandParameter="5" Content="B" GroupName="AxisSelect" Grid.Column="4" Grid.Row="3" Style="{StaticResource MainRadioButtonStyle}" Template="{DynamicResource RadioButtonBaseControlTemplate1}"/>
        <RadioButton Command="{Binding ChangeSelectedAxisCommand}" CommandParameter="6" Content="C" GroupName="AxisSelect" Grid.Row="4" Style="{StaticResource MainRadioButtonStyle}" Template="{DynamicResource RadioButtonBaseControlTemplate1}"/>
        <RadioButton Command="{Binding ChangeSelectedAxisCommand}" CommandParameter="7" Content="U" GroupName="AxisSelect" Grid.Column="1" Grid.Row="4" Style="{StaticResource MainRadioButtonStyle}" Template="{DynamicResource RadioButtonBaseControlTemplate1}"/>
        <RadioButton Command="{Binding ChangeSelectedAxisCommand}" CommandParameter="8" Content="V" GroupName="AxisSelect" Grid.Column="2" Grid.Row="4" Style="{StaticResource MainRadioButtonStyle}" Template="{DynamicResource RadioButtonBaseControlTemplate1}"/>
        <RadioButton Command="{Binding ChangeSelectedAxisCommand}" CommandParameter="9" Content="W" GroupName="AxisSelect" Grid.Column="3" Grid.Row="4" Style="{StaticResource MainRadioButtonStyle}" Template="{DynamicResource RadioButtonBaseControlTemplate1}"/>

        <TextBlock Grid.Row="5" Grid.ColumnSpan="5" TextWrapping="Wrap" Text="{x:Static resx:GeneralComponentsStrings.HoldButtonToJog}" Style="{DynamicResource MainTextBlockStyle}"/>
        <Button Content="- JOG" Grid.Row="6" Template="{DynamicResource ButtonBaseControlTemplate1}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                    <prism:InvokeCommandAction Command="{Binding TryJogCommand}" CommandParameter="-"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                    <prism:InvokeCommandAction Command="{Binding StopJogCommand}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </Button>

        <Button Content="JOG +" Grid.Column="1" Grid.Row="6" Template="{DynamicResource ButtonBaseControlTemplate1}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                    <prism:InvokeCommandAction Command="{Binding TryJogCommand}" CommandParameter="+"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                    <prism:InvokeCommandAction Command="{Binding StopJogCommand}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </Button>
        <Button  Command="{Binding StopJogCommand}" Content="STOP" Grid.Column="2" Grid.Row="6" Template="{DynamicResource ButtonBaseControlTemplate1}"/>
        <Button Content="HOME" Grid.Column="3" Grid.Row="6" Command="{Binding HomeCommand}" Template="{DynamicResource ButtonBaseControlTemplate1}"/>

        <TextBlock Grid.Row="7" Grid.ColumnSpan="2" TextWrapping="Wrap" Text="{x:Static resx:GeneralComponentsStrings.JogIncremental}" Style="{DynamicResource MainTextBlockStyle}"/>
        <Button Command="{Binding JogIncrementallyCommand}" CommandParameter="-" Content="- JOG" Grid.Row="8" Template="{DynamicResource ButtonBaseControlTemplate1}"/>
        <Button Command="{Binding JogIncrementallyCommand}" CommandParameter="+" Content="JOG +" Grid.Column="1" Grid.Row="8" Template="{DynamicResource ButtonBaseControlTemplate1}"/>

        <TextBlock Grid.Column="2" Grid.ColumnSpan="2" Grid.Row="7" TextWrapping="Wrap" Text="{x:Static resx:GeneralComponentsStrings.IncrementalDistance}" Style="{DynamicResource MainTextBlockStyle}" Margin="15,2,10,2"/>
        <TextBox Grid.Column="2" Grid.ColumnSpan="2" Grid.Row="8" VerticalContentAlignment="Center" TextWrapping="Wrap" Margin="15,5,10,10" FontSize="20" Style="{DynamicResource TextBoxStyle1}">
            <TextBox.Text>
                <Binding Path="EncoderUnits" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <validation:EncoderUnitsValidationRule />
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>
    </Grid>
</UserControl>
