<UserControl x:Class="TopButtons.Views.TopButtons"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:res="http://www.infrastructure.cnc.com/resources"
             
             mc:Ignorable="d" 
             xmlns:prism="http://prismlibrary.com/"
             prism:ViewModelLocator.AutoWireViewModel="True"
             d:DesignHeight="180" d:DesignWidth="1700">
    <UserControl.Resources>
        <ControlTemplate x:Key="ButtonBaseControlTemplate1_modif" TargetType="{x:Type ButtonBase}">
            <ControlTemplate.Resources>
                <Storyboard x:Key="Storyboard1">
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="border">
                        <EasingDoubleKeyFrame KeyTime="0" Value="1.01"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="border">
                        <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="border">
                        <EasingDoubleKeyFrame KeyTime="0" Value="1.05"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="border">
                        <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
            </ControlTemplate.Resources>
            <Border x:Name="border" BorderThickness="1.5" SnapsToDevicePixels="True" CornerRadius="5" BorderBrush="#FF3152A0" RenderTransformOrigin="0.5,0.5" Margin="2">
                <Border.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Border.RenderTransform>
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFF0F6FE" Offset="0"/>
                        <GradientStop Color="White" Offset="1"/>
                        <GradientStop Color="#FFAFC8E0" Offset="0.5"/>
                    </LinearGradientBrush>
                </Border.Background>
                <Viewbox>
                    <ContentPresenter x:Name="contentPresenter" TextBlock.FontSize="17" ContentTemplate="{TemplateBinding ContentTemplate}" TextBlock.FontWeight="Bold" TextBlock.Foreground="#30509F" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                        <ContentPresenter.Resources>
                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource WrappingStyle}"/>
                        </ContentPresenter.Resources>
                    </ContentPresenter>
                </Viewbox>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.ExitActions>
                        <RemoveStoryboard BeginStoryboardName="Storyboard1_BeginStoryboard"/>
                    </Trigger.ExitActions>
                    <Trigger.EnterActions>
                        <BeginStoryboard x:Name="Storyboard1_BeginStoryboard" Storyboard="{StaticResource Storyboard1}"/>
                    </Trigger.EnterActions>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Opacity" TargetName="border" Value="0.7"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                    <Setter Property="Foreground" Value="#FF838383"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>

        <GroupBox Header="{x:Static res:TopButtonsStrings.Feedrate}" Style="{DynamicResource GroupBoxTopStyle1}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <RepeatButton Command="{Binding FeedrateMinusCommand}" Content="—" Template="{DynamicResource ButtonBaseControlTemplate1_modif}" Interval="10" Delay="100"/>
                <RepeatButton Command="{Binding FeedratePlusCommand}" Content="➕" Grid.Column="1" Template="{DynamicResource ButtonBaseControlTemplate1_modif}"/>
                <Button Command="{Binding FeedrateOffCommand}" Content="0%" Grid.Row="1" Grid.ColumnSpan="2" Template="{DynamicResource ButtonBaseControlTemplate1_modif}"/>
                <Button Command="{Binding Feedrate100Command}" Grid.ColumnSpan="2" Content="100%" Grid.Row="2" FontSize="17" Template="{DynamicResource ButtonBaseControlTemplate1_modif}"/>
            </Grid>
        </GroupBox>
        <GroupBox Grid.Column="1" Header="{x:Static res:TopButtonsStrings.Rapid}" Style="{DynamicResource GroupBoxTopStyle1}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <RepeatButton Content="—" Template="{DynamicResource ButtonBaseControlTemplate1_modif}"/>
                <RepeatButton Content="➕" Grid.Column="1" Template="{DynamicResource ButtonBaseControlTemplate1_modif}"/>
                <Button Content="0%" Grid.Row="1" Grid.ColumnSpan="2" Template="{DynamicResource ButtonBaseControlTemplate1_modif}"/>
                <Button Grid.ColumnSpan="2" Content="100%" Grid.Row="2" Template="{DynamicResource ButtonBaseControlTemplate1_modif}"/>
            </Grid>
        </GroupBox>
        <GroupBox Header="{x:Static res:TopButtonsStrings.Spindel}" Grid.Column="2" Style="{DynamicResource GroupBoxTopStyle1}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid Grid.ColumnSpan="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <RepeatButton Grid.Column="0" Content="—" Command="{Binding LaserPowerDecreaseCommand}" Template="{DynamicResource ButtonBaseControlTemplate1_modif}"/>
                    <Border Grid.Column="1" BorderThickness="1.5" BorderBrush="#30509F" Padding="30 0 30 0" CornerRadius="5" Margin="3">
                        <TextBlock Text="100%" VerticalAlignment="Center" HorizontalAlignment="Center" Style="{DynamicResource lbTextBlockStyle}" FontWeight="DemiBold"/>
                    </Border>
                    <RepeatButton Grid.Column="2" Content="➕" Command="{Binding LaserPowerIncreaseCommand}" Template="{DynamicResource ButtonBaseControlTemplate1_modif}"/>
                </Grid>
                <Button Content="0%" Command="{Binding LaserOffCommand}" Grid.Row="1" Grid.ColumnSpan="2" Template="{DynamicResource ButtonBaseControlTemplate1_modif}"/>
                <Button Grid.ColumnSpan="2" Command="{Binding LaserOnCommand}" Content="100%" Grid.Row="2" Template="{DynamicResource ButtonBaseControlTemplate1_modif}"/>
            </Grid>
        </GroupBox>
        <StackPanel Grid.Column="3" VerticalAlignment="Center">
            <Button Width="40" Height="40" Command="{Binding MessageCommand}" Template="{DynamicResource ButtonBaseControlTemplate1}" Padding="10">
                <Image Source="{StaticResource message-icon}"/>
            </Button>
            <Button Width="40" Height="40" Command="{Binding SettingsCommand}" Template="{DynamicResource ButtonBaseControlTemplate1}" Padding="10">
                <Image Source="{StaticResource settings-icon}" />
            </Button>
        </StackPanel>

    </Grid>
</UserControl>
